plugins {
    id 'java'
    id 'maven'
    id 'maven-publish'
}

repositories {
    mavenCentral()
}

dependencies {
    compile group: 'net.java.dev.jna', name: 'jna', version: '5.8.0'
    compile group: 'net.java.dev.jna', name: 'jna-platform', version: '5.8.0'
    compile 'info.picocli:picocli:4.6.1'
    implementation group: 'org.bouncycastle', name: 'bcprov-jdk15to18', version: '1.68'
    compile group: 'co.nstant.in', name: 'cbor', version: '0.9'
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.30'

    implementation group: 'com.squareup.retrofit2', name: 'retrofit', version: '2.9.0'
    implementation('com.squareup.retrofit2:converter-jackson:2.9.0') {
        exclude group: 'com.fasterxml.jackson.core', module: 'jackson-databind'
    }
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.12.3'
    implementation group: 'com.google.guava', name: 'guava', version: '30.1.1-jre'
    //implementation("com.squareup.okhttp3:okhttp:4.9.1")

    compileOnly 'org.projectlombok:lombok:1.18.20'
    annotationProcessor 'org.projectlombok:lombok:1.18.20'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
    testImplementation 'org.hamcrest:hamcrest-library:2.2'
    testImplementation 'org.mockito:mockito-inline:3.7.7'
    testImplementation 'org.mockito:mockito-junit-jupiter:3.7.7'
}

configurations {
    integrationTestCompile.extendsFrom testCompile
    integrationTestImplementation.extendsFrom testImplementation
    integrationTestRuntime.extendsFrom testRuntime
    integrationTestRuntimeOnly.extendsFrom testRuntimeOnly
}

compileJava {
    options.encoding = "UTF-8"
    options.compilerArgs += ["-Xlint:none","-Aproject=${project.group}/${project.name}"]
}
uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: "http://nexus.tqxd.com/repository/maven-snapshots") {
                authentication(userName: "devuser", password: "devuser")
            }
            pom.groupId = "$project.group"
            pom.artifactId = "$project.archivesBaseName"
            pom.version = "$project.version"
        }
    }
}
test {
    scanForTestClasses = false
    ignoreFailures = true
    exclude '**/*'
}
task sourceJar(type: Jar) {
    classifier "sources"
    from sourceSets.main.allJava
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier "javadoc"
    from javadoc.destinationDir
}

artifacts {
    archives jar
    archives sourceJar
    archives javadocJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact(sourceJar) {
                classifier = 'sources'
            }
            artifact(javadocJar) {
                classifier = 'javadoc'
            }
            pom {
                name = 'Cardano Client Library'
                description = 'Cardano Client Library for Java'
                url = 'https://github.com/bloxbean/cardano-client-lib'
                licenses {
                    license {
                        name = 'The MIT License'
                        url = 'http://www.opensource.org/licenses/mit-license.php'
                    }
                }
                developers {
                    developer {
                        id = 'satran004'
                        name = 'Satya'
                        email = 'satran004@gmail.com'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/bloxbean/cardano-client-lib.git'
                    developerConnection = 'scm:git:ssh://git@github.com/bloxbean/cardano-client-lib.git'
                    url = 'https://github.com/bloxbean/cardano-client-lib'
                }
            }
        }
    }

    repositories {
        String ossrhUsername = System.getenv('MAVEN_USER')
        String ossrhPassword = System.getenv('MAVEN_PASSWORD')

        maven {
            def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2"
            def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            credentials {
                username ossrhUsername
                password ossrhPassword
            }
        }
    }
}


